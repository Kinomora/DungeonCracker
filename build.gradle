import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id "application"
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id 'edu.sc.seis.launch4j' version '2.5.0'
}

defaultTasks("clean","release")

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url "https://maven.latticg.com/"
    }

}

java {
    // very important ByteBuffer does not have flip in java 1.8
    // this set the javac --release flag
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

// this task replace the @VERSION@ token with the current project.version
task processSource(type: Sync) {
    from sourceSets.main.java
    inputs.property 'version', version
    filter(ReplaceTokens, tokens: [VERSION: version])
    into "$buildDir/src"
}

compileJava {
    source = processSource.outputs
}


dependencies {
    implementation 'com.github.hube12:SEED:b80304e54c'
    implementation('com.seedfinding:latticg:1.06')
    implementation('one.util:streamex:0.7.3')
    implementation('com.google.code.gson:gson:2.8.6')
    implementation('com.formdev:flatlaf:0.38')
}

application {
    mainClass.set("kinomora.Main")
}

tasks.withType(JavaCompile) {
   // options.compilerArgs += ['-Xlint:deprecation', '-Xlint:unchecked']
    options.fork = true
}

run {
    args "--no-update"
}

shadowJar {
    archiveFileName = "${project.name}-${project.version}.jar"
}

launch4j {
    outfile = "${project.name}-${project.version}.exe"
    icon = "${projectDir}/icon.ico"
    outputDir = "libs"
    supportUrl = "https://github.com/Kinomora/DungeonCracker/issues"
    jvmOptions = ["-Xms1G", "-Xmx8G"]
    initialHeapPercent = 5
    maxHeapPercent = 80
    jarTask = project.tasks.shadowJar
    productName = "DungeonCracker"
    fileDescription = "A lightning fast dungeon cracker."
    copyConfigurable = [] // don't copy lib
    libraryDir= "ignore_libs"
    jreMaxVersion=JavaVersion.VERSION_HIGHER
    jreMinVersion=JavaVersion.VERSION_1_8
    // this is a dirty fix to use JAVA_HOME
    bundledJrePath ="%JAVA_HOME%;%PATH%"
}

task("release"){
    dependsOn(clean)
    dependsOn(shadowJar)
    dependsOn(createExe)
}

plugins {
    id "java"
    id "application"
}
defaultTasks 'clean', 'run'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
repositories {
}

dependencies {
    implementation 'com.github.KaptainWutax:LattiCG:b2a338f7bd765dcd184136c2245ea5765b75edf8'
    implementation 'com.github.KaptainWutax:SeedUtils:-SNAPSHOT'
    implementation 'com.github.KaptainWutax:BiomeUtils:-SNAPSHOT'
}

application {
    mainClassName = "dungeons.Main8"
}


compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
    useJUnitPlatform {
        includeEngines("junit-jupiter")
        maxHeapSize = "1G"
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        outputs.upToDateWhen { false }
        showStandardStreams = true
        showExceptions true
        showCauses true
        showStackTraces true
    }
}



task jar15(type: Jar) {
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Main-Class": "dungeons.Main15"
        )
    }
    outputs.upToDateWhen{false}
    project.archivesBaseName = "DungeonCracker15"
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

task jar14(type: Jar) {
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Main-Class": "dungeons.Main14"
        )
    }
    outputs.upToDateWhen{false}
    project.archivesBaseName = "DungeonCracker14"
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}